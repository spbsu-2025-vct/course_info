---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  default.conf: |
    server {
      listen 80 default_server;
      server_name  _;
      default_type text/plain;

      location / {
         return 200 'Hello from $hostname\n';
       }

      location /files {
        alias /data;
        autoindex on;
        client_body_temp_path /tmp;
        dav_methods PUT DELETE MKCOL COPY MOVE;
        create_full_put_path on;
        dav_access user:rw group:rw all:r;
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: nginx
          image: nginx:1.12
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: my-configmap
        - name: data
          persistentVolumeClaim:
            claimName: fileshare

---
apiVersion: v1
kind: Service
metadata:
  name: my-service-load-balancer
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: my-app

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer # default: Immediate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv1
spec:
  capacity:
    storage: 50Mi
  volumeMode: Filesystem # Block
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Delete, Recycle (deprecated)
  storageClassName: local-storage
  local:
    path: /mnt/share
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fileshare
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Mi
